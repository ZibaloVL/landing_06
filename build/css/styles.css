/* подключаем сетку в px */

/* используем её примеси */

/*здесь прописанные общие стили*/

/*

@font-face {
	font-family: 'BariolRegular';
	src: url("../fonts/BariolRegular.eot");
    src: url("../fonts/BariolRegular.woff") format("woff"),
         url("../fonts/BariolRegular.ttf") format("truetype");
         font-style: normal;
         font-weight: normal;
}
*/

@font-face {
  font-family: 'Intro';
  src: url('../fonts/Intro/8289.eot');
  src: url('../fonts/Intro/8289.woff') format('woff'), url('../fonts/Intro/8289.ttf') format('truetype'), url('../fonts/Intro/8289.svg') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'MyradPro';
  src: url('../fonts/MyriadPro/8143.eot');
  src: url('../fonts/MyriadPro/8143.woff') format('woff'), url('../fonts/MyriadPro/8143.ttf') format('truetype'), url('../fonts/MyriadPro/8143.svg') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'TimesNewRoman';
  src: url('../fonts/TimesNewRoman/Times New Roman.eot');
  src: url('../fonts/TimesNewRoman/Times New Roman.woff') format('woff'), url('../fonts/TimesNewRoman/Times New Roman.ttf') format('truetype'), url('..fonts/TimesNewRoman/Times New Roman.svg') format('svg');
  font-weight: normal;
  font-style: normal;
}

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

/*
font-family: 'Open Sans', sans-serif;
*/

.wrapper {
  max-width: 1140px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

.debugGrid {
  height: 100vh;
  position: fixed;
  width: 100%;
}

.debugGrid > div {
  height: inherit;
  max-width: 1140px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

.debugGrid > div > div {
  height: inherit;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.debugGrid > div > div > div {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(8.333333333333334% - 30px);
  height: inherit;
  outline: 1px solid #f90;
  background: rgba(0, 0, 0, 0.2);
}

.header {
  background-image: -webkit-linear-gradient(55deg, #1068a8 17%, #6fc1e4 83%);
  background-image: linear-gradient(35deg, #1068a8 17%, #6fc1e4 83%);
  font-family: 'Intro';
  color: #ffffff;
}

.header .man {
  background-image: url("../img/header.png");
  background-repeat: no-repeat;
  background-position: 100% 100%;
  padding: 30px 25px 200px 25px;
}

.header .man .headerUp {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  padding: 0 5px;
}

.header .man .headerUp .logo {
  width: calc(24.583333333333336% - 30px);
}

.header .man .headerUp .logo img {
  width: 37px;
  hight: 32px;
  margin-right: 10px;
  float: left;
}

.header .man .headerUp .logo .smm {
  overflow: hidden;
  text-align: left;
  padding-left: 10px;
}

.header .man .headerUp .navmeniu {
  width: calc(50% - 30px);
}

.header .man .headerUp .navmeniu ul li {
  display: inline;
  margin-right: 27px;
}

.header .man .headerUp .navmeniu ul li a {
  text-decoration: none;
  color: #ffffff;
}

.header .man .headerUp .phone {
  width: calc(32.91666666666667% - 30px);
  text-align: right;
  font-size: 23px;
  font-family: 'MyradPro';
}

.header .man .headerDown {
  margin-top: 100px;
}

.header .man .headerDown h1 {
  font-size: 50px;
  width: 500px;
  line-height: 56.3px;
}

.header .man .headerDown p {
  margin-top: 13px;
  margin-bottom: 25px;
  font-size: 14px;
  font-family: 'Open Sans';
  width: 300px;
}

.header .man .headerDown .btn {
  width: 218px;
  height: 61px;
  background-color: #ffffff;
  border-radius: 50px;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: inline-flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

.header .man .headerDown .btn a {
  font-family: 'Intro';
  color: #0081df;
  font-size: 14px;
  font-weight: 400;
  line-height: 20px;
  -webkit-transform: scale(1.211, 1.22);
  -ms-transform: scale(1.211, 1.22);
  transform: scale(1.211, 1.22);
  text-decoration: none;
}

.oueClients {
  padding: 90px 0;
}

.oueClients h2 {
  font-family: Intro;
  color: #0081df;
  font-size: 50px;
  font-weight: 400;
  line-height: 56.3px;
}

.oueClients .slogan {
  padding-top: 25px;
  font-family: 'Open Sans';
  font-size: 14px;
  font-weight: 400;
  line-height: 25.3px;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

.oueClients .slogan p {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
}

.oueClients .slogan p:nth-child(1) {
  width: calc(54.16666666666667% - 30px);
  text-align: left;
}

.oueClients .slogan p:nth-child(2n) {
  width: calc(37.5% - 30px);
  text-align: right;
}

.oueClients .miniBaner {
  padding-top: 50px;
  color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.oueClients .miniBaner .item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(25% - 30px);
}

.oueClients .miniBaner .item p {
  margin-top: -100px;
  padding: 0 30px;
  text-align: center;
}

.compleks {
  margin-top: 80px;
  background-image: url("../img/comlex.png");
  background-repeat: no-repeat;
  background-position: 95% 50%;
  background-size: auto;
  padding-bottom: 10px;
  padding-top: 15px;
}

.compleks h2 {
  font-family: 'Intro';
  color: #0081df;
  font-size: 35.74844px;
  line-height: 36.16422px;
  width: 60%;
}

.compleks h2 span {
  font-size: 27.80309px;
  line-height: 39.724496px;
}

.compleks .items {
  padding-top: 90px;
  font-family: 'Open Sans';
  font-size: 19.632px;
  font-weight: 600;
  line-height: 28.8754px;
}

.compleks .items .item {
  width: 40%;
  margin-bottom: 70px;
  overflow: hidden;
}

.compleks .items .item img {
  float: left;
  width: 120px;
  height: 116px;
  margin-right: 45px;
}

.compleks .items .item p {
  text-align: left;
}

.compleks .items .item:nth-child(2n) img {
  float: right;
  margin-left: 30px;
  margin-right: 0px;
}

.compleks .items .item:nth-child(2n) p {
  text-align: right;
}

@media screen and (max-width: 720px) {
  .wrapper {
    padding-left: 8px;
    padding-right: 8px;
  }

  .debugGrid > div {
    padding-left: 8px;
    padding-right: 8px;
  }

  .debugGrid > div {
    padding-left: 8px;
    padding-right: 8px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
